---
import { Icon } from "astro-icon/components";

const apiKey = import.meta.env.WEB3FORMS_API_KEY;
---

<form name="Formulario de contacto" method="POST" id="form">
  <input type="hidden" name="access_key" value={apiKey}>
  <input type="hidden" name="subject" value="Nuevo mensaje de la web!">
  
  <!-- Form inputs with labels for demonstration -->
  <label for="name-input">Nombre completo</label>
  <input type="text" name="name" id="name-input" placeholder="Nombre Apellido" required />
  <div class="error-message" id="name-error-message"></div>

  <label for="phone-input">Teléfono de contacto</label>
  <input type="text" name="phone" id="phone-input" placeholder="651375623" required />
  <div class="error-message" id="phone-error-message"></div>

  <label for="email-input">Correo electrónico</label>
  <input type="email" name="email" id="email-input" placeholder="nombre@gmail.com" required />
  
  <label for="theme-select">Tema de la consulta</label>
  <select name="theme" id="theme-select" required>
    <option value="" disabled selected>Selecciona un tema</option>
    <option value="Derecho Real">Derecho Real</option>
    <option value="Derecho sucesorio">Derecho sucesorio</option>
    <option value="Derecho de contratos y obligaciones">Derecho de contratos y obligaciones</option>
    <option value="Responsabilidad civil">Responsabilidad civil</option>
  </select>
  
  <label for="message-textarea">Información complementaria sobre la consulta</label>
  <textarea name="message" id="message-textarea" placeholder="Danos algunos detalles sobre tu consulta..." required></textarea>
  <div class="error-message" id="message-error-message"></div>

  <section class="result-section" id="result-section">
    <div class="result-section-text" id="text-section">
      <div class="mdi-icon-success-container" id="success-icon-container">
        <!-- Success Icon -->
        <Icon name="mdi:email-fast" id="success-icon" />
      </div>
      <div class="mdi-icon-error-container" id="error-icon-container">
        <!-- Error Icon -->
        <Icon name="mdi:alert-circle" id="error-icon" />
      </div>
      <h3 id="result" class="result-message"></h3>
    </div>
  </section>

  <button type="submit" id="submit-btn" class="form-button">
    Enviar correo
  </button>
</form>

<script is:inline>
  const form = document.getElementById('form');
  const resultDiv = document.getElementById('result');
  const resultSection = document.getElementById('result-section');
  const textSection = document.getElementById('text-section');
  const nameErrorMessage = document.getElementById('name-error-message');
  const phoneErrorMessage = document.getElementById('phone-error-message');
  const messageErrorMessage = document.getElementById('message-error-message');
  const successIcon = document.getElementById('success-icon-container');
  const errorIcon = document.getElementById('error-icon-container');

form.addEventListener('submit', function(e) {
  e.preventDefault();
  const formData = new FormData(form);

  textSection.classList.remove('error');
  nameErrorMessage.classList.remove('visible');
  nameErrorMessage.textContent = '';
  phoneErrorMessage.classList.remove('visible');
  phoneErrorMessage.textContent = '';
  messageErrorMessage.classList.remove('visible');
  messageErrorMessage.textContent = '';
  let isValid = true;
  const name = formData.get('name');
  if (typeof name !== 'string' || name.split(' ').length < 2) {
  // Display error under the name field
    nameErrorMessage.textContent = "Por favor, ingrese un nombre y apellido.";
    nameErrorMessage.classList.add('visible');
    isValid = false;
  }

  const phone = formData.get('phone');
  if (phone.length !== 9 || !/^\d+$/.test(phone)) {
    phoneErrorMessage.textContent = "Por favor, ingrese un número de teléfono de 9 dígitos sin extensión, por ejemplo 651375821.";
    phoneErrorMessage.classList.add('visible');
    isValid = false;
  }

  const message = formData.get('message');
  console.log(message.length);
  if (message.length < 50) {
    messageErrorMessage.textContent = `Por favor, denos más detalles sobre el motivo de consulta, ha introducido ${message.length} caracteres (Mínimo 50 caracteres, equivalente a un par de líneas).`;
    messageErrorMessage.classList.add('visible');
    isValid = false;
  } else if (message.length > 500) {
    messageErrorMessage.textContent = `Por favor, intente ser más conciso, ha introducido ${message.length} caracteres (Máximo 500 caracteres).`;
    messageErrorMessage.classList.add('visible');
    isValid = false;
  }

  if(!isValid) {
    resultSection.classList.add('visible');
    textSection.classList.add('error');
    resultDiv.textContent = "Error al enviar el formulario. Por favor, revise los campos introducidos.";
    resultDiv.className = "result-message error";
  } else {
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    // Show loading state
    resultDiv.textContent = "Enviando formulario de contacto..."
    resultDiv.className = "result-message loading";
    resultSection.classList.add('visible');

    fetch('https://api.web3forms.com/submit', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: json
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          resultDiv.innerHTML = `
              <p>¡Correo enviado con éxito!</p>
              <p>Nos pondremos en contacto contigo lo antes posible.</p>
            `;
          resultDiv.className = "result-message success";
          successIcon.classList.add('visible');
        } else {
          resultDiv.textContent = "Algo ha ido mal, mientras lo solucionamos puedes llamar directamente al (+34) 971 480 375 para reservar cita";
          resultDiv.className = "result-message error";
          errorIcon.classList.add('visible');
        }
      })
      .catch(error => {
        console.log(error);
      })
      .then(function() {
        form.reset();
      });
  }
});
</script>

<style>
  form {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }  
  form label {
    font-family: var(--theme-font-family-serif);
    font-size: var(--font-size-base);
  }

  /* Input and Textarea styling for boxed effect */
  input[type="text"],
  input[type="email"],  
  select {
    appearance: none; /* Remove default arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 100%;
    padding: 0.75rem;
    padding-right: 2.5rem; /* Extra space for custom arrow */
    border: 2px solid #ccc;
    border-radius: 5px;
    font-size: var(--font-size-base);
    box-sizing: border-box;
    background-color: #fff;
    position: relative;
  }
  textarea {
    width: 100%;
    min-height: 150px;
    padding: 0.75rem;
    border: 2px solid #ccc;
    border-radius: 5px;
    font-size: var(--font-size-base);
    box-sizing: border-box;
  }
  .form-button {
    font-family: var(--theme-font-family-serif);
    font-size: var(--font-size-base);
    background-color: var(--theme-surface-3); /* Change button color */
    color: var(--theme-on-surface-1); /* Set text color */
    padding: 1rem 1rem; /* Increase padding for a larger button */
    border-radius: 8px; /* Optional: round the corners */
    margin-bottom: 0;
  }
  .form-button:hover {
    color: var(--theme-on-primary);
    background-color: var(--theme-primary-darker); /* Color on hover */
  }
  .result-section {
		grid-template-columns: 10fr 1fr;
    padding: 0.75rem;
    display: none; /* Initially hidden */
	}
  .result-section.visible {
    display: block; /* Initially hide this section */
  }
  .result-section-text.error {
		background-color: var(--theme-error-bg);
	}
	.result-section-text {
		padding: 1rem;
		display: flex;
		flex-direction: column;
		justify-content: center;
    text-align: center;
		background-color: var(--theme-surface-1);
		border-radius: var(--theme-shape-radius);
	}
  .error-message {
  color: #d90f0f;
  font-size: 0.9rem;
  margin-top: 0.5rem;
  display: none; /* Hidden by default */
  }
  .error-message.visible {
    display: block;
  }
  .result-message {
    margin-top: 1rem;
    font-size: 1rem;
    color: var(--theme-on-surface-1);
  }
  .result-message.loading {
    color: var(--theme-on-surface-1);
  }
  .result-message.success {
    color: var(--theme-on-surface-1);
  }
  .result-message.error {
    color: var(--theme-on-surface-1);
  }
  .mdi-icon-success-container {
    display: none;
    font-size: 2.5rem;
    justify-content: center;
    align-items: center;
  }
  .mdi-icon-success-container.visible {
      display: flex; /* Show the container when the icon is visible */
      text-align: center;
  }
	.mdi-icon-error-container {
		display: none;
		justify-content: center;
    font-size: 2.5rem;
    display: none;
	}
  .mdi-icon-error-container.visible {
    text-align: center;
    display: flex;
  }
</style>